---
- name: Setup Vprofile stack
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Import Vpc Variables
      include_vars: vars/vpc-ouput_vars
    - name: Import Vprofile setup Variables
      include_vars: vars/vprostacksetup
    - name: create a new ec2 key pair, returns generated private key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out
    - name: Save private key into file login_vpro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./login_vpro.pem"
        mode: 0600
      when: vprokey_out.changed
    - name: Create sec group for load balancer
      ec2_group:
        name: vproELB-sg
        description: allow port 80 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out
    - name: Creating sec group for vprofile stack
      ec2_group:
        name: vproStack-sg
        description: allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: vproStackSG_out
    - name: update sec group with its own sg id
      ec2_group:
        name: vproStack-sg
        description: allow port 22 from everywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"
    - name: creating ngnix web01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{ngnix_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: web01_out
    - name: creating tomcat app01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: app01_out
    - name: creating memcached mc01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: mc01_out
    - name: creating rabbitmq rmq01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: rmq01_out
    - name: creating mysql db01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{prisub1id}}"
      register: db01_out
    - debug:
        var: db01_out







